<!DOCTYPE html>
<html lang="{{ locale }}" dir="{{ direction }}" class="{{ checkout_html_classes }}">
  <head>
    <head>
      <script src="https://widget.reviews.io/product/dist.js"></script>

    <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MPDH4PZ');</script>
<!-- End Google Tag Manager -->
      
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
    <meta name="referrer" content="origin">

    <title>{{ page_title }}</title>

    {{ content_for_header }}

    {{ checkout_stylesheets }}
    {{ checkout_scripts }}
       {{ 'checkout.scss.css' | asset_url | stylesheet_tag }}
    {{ '//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js' | script_tag }}
{{ 'api.jquery.js' | shopify_asset_url | script_tag }}
    <!-- Hotjar Tracking Code for wonderfuldental.co -->
<script>
    (function(h,o,t,j,a,r){
        h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
        h._hjSettings={hjid:1015634,hjsv:6};
        a=o.getElementsByTagName('head')[0];
        r=o.createElement('script');r.async=1;
        r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
        a.appendChild(r);
    })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
      	<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>

    
    

  <script src="{{ 'checkout.js' | asset_url }}" defer="defer"></script>
<!--
    <script>
      
      
function getCookie(name) {
    var cookie = document.cookie;
    var prefix = name + "=";
    var begin = cookie.indexOf("; " + prefix);
    if (begin == -1) {
        begin = cookie.indexOf(prefix);
        if (begin !== 0) return 0;
    } else {
        begin += 2;
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
        end = cookie.length;
        }
    }
  
  console.log('getCookie('+name+'), result: ' + unescape(cookie.substring(begin + prefix.length, end)));
  
    return unescape(cookie.substring(begin + prefix.length, end));
} 

        function readCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }

function checkCookie(cname) {
    var username = readCookie(cname);
  console.log('checkCookie('+cname+')');
    if (username !== '' && username !== null) {
      console.log('cookie is here. Value: '+ readCookie(cname));
return 1;
    } else {
console.log('cookie is not here');
      return 0;
    }
  
}

function deleteCookie(name){
   
    document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
 
  console.log('deleteCookie('+name+')');
  
}

function setCookie(cname, cvalue) {


    var d = new Date();
    d.setTime(d.getTime() + (0.5*60*60*1000));
    var expires = "expires="+ d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  
  console.log('setCookie('+cname+', '+cvalue+')');
} 

      $(document).ready(function(){
        
        if($('html').hasClass('page--thank-you')){
          console.log('we are at thank you page!');
        }
        else{
        
        if(window.location.href.indexOf('previous_step=') > -1){
          
          if(window.location.href.indexOf('?previous_step=shipping_method') > -1){
            if(checkCookie('passed-contact') != 1){
               var newLoc =  window.location.href.split('?');
          newLoc = newLoc[0] + '?step=contact_information';
          window.location.href = newLoc;
            }
          }
        }
        else if(window.location.href.indexOf('?step=contact_information') > -1){
          setCookie('passed-contact', '1');
        }
        else{
         var newLoc =  window.location.href.split('?');
          newLoc = newLoc[0] + '?step=contact_information';
          window.location.href = newLoc;
        }
         
         if(window.location.href.indexOf('step=payment_method') > -1){
        
        window.onbeforeunload = function(){
        deleteCookie('passed-contact');
          
        }
         }
        }
      })
      
    </script>
-->
  
  {% include 'shogun-head' %}
</head>
  <body>
        <!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MPDH4PZ"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!--
    <style>
      .order-summary__section--discount{
       display: none; 
      }
      
      .order-summary__section--total-lines{
       border-top: 0px solid transparent !important; 
      }
      
      .order-summary__sections{
        height: calc(100vh - 4em) !important;
      }
    </style>
-->
    {{ skip_to_content_link }}

    <div class="banner" data-header>
      <div class="wrap">
        {{ content_for_logo }}
      </div>
    </div>

    {{ order_summary_toggle }}

    <div class="content" data-content>
      <div class="wrap">
        <div class="main" role="main">
          <div class="main__header">
            {{ content_for_logo }}
            {{ breadcrumb }}
            {{ alternative_payment_methods }}
          </div>
          <div class="main__content">
            <div class="checkout-success width-100 margin-bottom-lg" style="display: none;"><i class="fa fa-check"></i><p class="productTitle"></p> {{ settings.checkout_upsell_added }}</div>
            {{ content_for_layout }}
          </div>
          <div class="main__footer">
            {{ content_for_footer }}
          </div>
        </div>
        <div class="sidebar" role="complementary">
          <div class="sidebar__header">
            {{ content_for_logo }}
          </div>
          <div class="sidebar__content">
            {{ content_for_order_summary }}
            
            <div class="order-summary__section cta-block" >
              <div class="title-holder">
              <h2 class="section__title">{{ settings.checkout_sidebar_title }}</h2>
              </div>
              <div class="grid grid--no-gutters grid--table margin-bottom-md">
                <div class="grid__item one-eighth">
                  {% if  settings.checkout_block_1_image %}
                  <img src="{{ settings.checkout_block_1_image |img_url: '100x100' }}" />
                  {% else %}
                  {{ settings.checkout_block_1_svg }}
                  {% endif %}
                </div>
                <div class="grid__item seven-eighths">
                  <div class="padding-left-md">
                  <h3 class="no-margin">
                    {{ settings.checkout_block_1_title }}
                  </h3>
                    {{ settings.checkout_block_1_text }}
                  </div>
                </div>
              </div>
    		<div class="grid grid--no-gutters grid--table">
                <div class="grid__item one-eighth">
                  {% if  settings.checkout_block_2_image %}
                  <img src="{{ settings.checkout_block_2_image |img_url: '100x100' }}" />
                  {% else %}
                  {{ settings.checkout_block_2_svg }}
                  {% endif %}
                </div>
                <div class="grid__item seven-eighths">
                  <div class="padding-left-md">
                  <h3 class="no-margin">
                    {{ settings.checkout_block_2_title }}
                  </h3>
                    {{ settings.checkout_block_2_text }}
                  </div>
                </div>
              </div>
              <div class="images-holder text-center padding-top-md">
                {% if settings.checkout_bottom_image_1 %}
                <img src="{{ settings.checkout_bottom_image_1 |img_url: '100x100' }}"/>
                {% endif %}
                {% if settings.checkout_bottom_image_2 %}
                <img src="{{ settings.checkout_bottom_image_2 |img_url: '100x100' }}"/>
                {% endif %}
                
                {% if settings.checkout_bottom_svg_1 != blank %}
                  {{ settings.checkout_bottom_svg_1 }}
                {% endif %}
                
                {% if settings.checkout_bottom_svg_2 != blank %}
                  {{ settings.checkout_bottom_svg_2 }}
                {% endif %}
              </div>
              
              <div class="title-holder margin-vertical-md">
              <h2 class="section__title">{{ settings.reviews_title }}</h2>
              </div>
              {% include 'checkout-reviews' %}
    		</div>
          </div>
        </div>
      </div>
    </div>

    {{ tracking_code }}
    
    
     {% for item in checkout.line_items %}
        {% unless itemTypes contains item.product.type or  item.product.type == 'brush' %}
          {% capture itemTypes %}{{ itemTypes }},{{ item.product.type }}{% endcapture %}
        {% endunless %}
      {% endfor %}
     <!--
      {% assign itemTypes = itemTypes |remove_first: ',' |split: ',' %}
       {% if itemTypes.size == 1 %}
            
            {% if itemTypes[0] == 'paste' %}
           looking for angle 1
            {% assign collection = settings.checkout_upsell_angle %}
            {% elsif itemTypes[0] == 'fluoride varnish' %}
            //looking for paste 1
            {% assign collection = settings.checkout_upsell_paste %}
            {% else %}
            //looking for varnish 1
            {% assign collection = settings.checkout_upsell_varnish %}
            {% endif %}
            
    {% elsif itemTypes.size == 2 %}
    
            {% if itemTypes[0] == 'paste' or itemTypes[1] == 'paste' %}
              {% if itemTypes[0] == 'angle' or itemTypes[1] == 'angle' %}
                //looking for varnish 2
            {% assign collection = settings.checkout_upsell_varnish %}
              {% else %}
                //has varnish and paste, looking for angles 2
            {% assign collection = settings.checkout_upsell_angle %}
              {% endif %}
            
            {% else %}
            //has angles and varnish, looking for paste 2
            {% assign collection = settings.checkout_upsell_paste %}
            {% endif %}
    {% else %}
    //has everything, looking for varnish which is not in cart 3
            {% assign collection = settings.checkout_upsell_varnish %}
    {% assign hasEverything = 1 %}
    {% endif %}
    {{ collection }}: before edit
    {% if hasEverything == 1 %}
    {% for item in checkout.line_items %}
    {% assign preComma = item.product.handle |prepend: ',' %}
    {% assign afterComma = item.product.handle |append: ',' %}
    {% assign collection = collection |remove: preComma, |remove: afterComma %}
    
    {% unless collection contains ',' %}
     {% assign collection = collection |remove: item.product.handle %}
    {% endunless %}
    {% endfor %}
    {% endif %}
    {{ collection }}
    -->
    <script type="text/template" data-template="upsellholder">
    <div class="upsell-holder margin-bottom-lg">
    <h2 class="section__title">{{ settings.checkout_upsell_title |remove: '<p>' |remove: '</p>'}}</h2>
    <div class="margin-bottom-sm">
    ${text}
    </div>
    </div>
    </script>
    
    <script type="text/template" data-template="upsellitem">
    <div class="upsell-item padding-vertical-sm" data-id="${id}" data-title="${title}">
      <div class="grid grid--table small--break-table grid--no-gutters">
        <div class="grid__item small--one-quarter medium-up--one-eighth">
          <img class="upsell-img" src="${img}" />
        </div>
        <div class="grid__item five-twelfths">
          <div class="product__description--holder">
             <h5 class="upsell-product-title  margin-bottom-sm2 small--margin-bottom-sm">${title}</h5>
            <select class="upsell-id" data-id="${id}" style="display: none;">

            </select>
          </div>
        </div>
        <div class="grid__item small--hide medium-up--one-eighth text-center">
        <div class="small--margin-bottom-sm">
        <span class="price">
        ${price}
        </span>
        <span class="package">${package}</span>
        </div>
        </div>
        <div class="grid__item small--one-third medium-up--one-sixth text-right">
         <div class="small--margin-bottom-sm medium-up--hide">
        <span class="price">
        ${price}
        </span>
        <span class="package">${package}</span>
        </div>
        <input type="number" class="qty" data-id="${id}" value="1">
        </div>
        <div class="grid__item small--one-whole medium-up--one-sixth text-right">
        <a href="javascript:void(0);" class="btn upsell_add small--margin-top-sm2">
        {{ settings.checkout_upsell_btn_text }}
        </a>
        </div>
        </div>
      </div>
    </div>
</script>
    
    <script type="text/template" data-template="checkoutitem">
      <tr class="product" data-product-id="${id}" data-variant-id="$(varId)" data-product-type="${type}" data-customer-ready-visible="">
          <td class="product__image">
            <div class="product-thumbnail">
  <div class="product-thumbnail__wrapper">
    <img alt="${title}" class="product-thumbnail__image" src="${image}">
  </div>
    <span class="product-thumbnail__quantity" aria-hidden="true">${qty}</span>
</div>

          </td>
          <td class="product__description">
            <span class="product__description__name order-summary__emphasis">${title}</span>
            <span class="product__description__variant order-summary__small-text"></span>


          </td>
          <td class="product__quantity visually-hidden">
            ${qty}
          </td>
          <td class="product__price">
            <span class="order-summary__emphasis">${totalPrice}</span>
          </td>
        </tr>
    </script>
    <script type="text/template" data-template="checkoutfblike">
        <div id="fb-root"></div>
  <${script}>(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
    </${script}>
  
  <div class="grid ">
  <div class="grid__item one-whole margin-bottom-sm margin-top-md medium-up--padding-right-xlg">
  <!-- Your like button code -->
      <div class="fb-like" 
        data-href="{{ shop.url }}" 
        data-layout="button" 
        data-action="like" 
        data-show-faces="true">
      </div>
    </div>
  	<div class="grid__item one-whole margin-bottom-md">
  {{ settings.checkout_facebook_text }}
  	</div>
  </div>
</script>
    
    
    <script>
      
      //different description for product type
    var content = [];
      
       content['varnish'] = '{{ settings.checkout_upsell_varnish_text }}';
      
       content['angle'] = '{{ settings.checkout_upsell_angle_text }}';
    
       content['paste'] = '{{ settings.checkout_upsell_paste_text }}';
       
       
       //checking if url exists to prevent errors
       
       function checkUrl(url){
        $.ajax({url: url, success: function(data, textStatus) {
                  return 1;
            }, error: function(jqXHR, textStatus, errorThrown) {
                  return 0;
            }
            }); 
       }
       
       //function to search in arrays
       
       function arrayIndex(arr, string){
        var t;
         var index = -1;
                for(t=0;t<arr.length;t++){
                  if(arr[t].indexOf(string) !== -1){
                  index = t;
                }
                }
         
         return index;
       }
       
      //noscript html renderer
      
         function render(props) {
  return function(tok, i) { return (i % 2) ? props[tok] : tok; };
}
      
      //array with the data for all the products
      
      var collection = [];
      
      var moreThanOne = 0;
      
      var checkoutId = '{{ checkout.id }}';
      
      var upsellAddedCookie = 'upsellAdded{{ checkout.id }}';
      
      var successUpsellCookie = 'successUpsell{{ checkout.id }}';
      
      function checkCookiesFunction(items){
        changeCheckoutId(checkoutId);
        console.log('checking cookies: ' + upsellAddedCookie + ' and ' + successUpsellCookie);
        if(checkCookie(upsellAddedCookie) == 0){
          
          var holderTpl = $('script[data-template="upsellholder"]').text().split(/\$\{(.+?)\}/g);
              
            var itemTpl = $('script[data-template="upsellitem"]').text().split(/\$\{(.+?)\}/g);
            
          
              console.log("checkCookie('upsellAdded') not here");
          
          if($.isArray(items)){
            
            console.log("This if is working");
            
                $('.main__content').prepend(items.map(function (item) {
                  return holderTpl.map(render(item)).join('');
                }));

                $('.upsell-holder').append(items.map(function (item) {
                  return itemTpl.map(render(item)).join('');
                }));
                
                if(moreThanOne == 1){
                 $('select.upsell-id').show(); 
                }
        }
              }
              else if(checkCookie(successUpsellCookie) == 0){
                
              console.log("checkCookie('successUpsell') not here");
                
                $('.checkout-success .productTitle').text(getCookie(upsellAddedCookie));
                setCookie(successUpsellCookie, 1);
                
               $('.checkout-success').slideDown(300);
                setTimeout(function(){
                  
                $('.checkout-success').slideUp(300);
                },10000);
              }
              
      }
      
      //function after we have all the data for the products loaded
     
            function ajaxDone(){
              
              
              //checking if we have an error or success
              if(window.location.href.indexOf('#addSuccess') > -1){
                //we have success
                
                 history.pushState("", document.title, window.location.pathname
                                                       + window.location.search);
              }
                else if(window.location.href.indexOf('#addError') > -1){
                  //we have error
                
                 history.pushState("", document.title, window.location.pathname
                                                       + window.location.search);
               
                }
              
              //preparing the data for the renderer
              
              var package;
              if(arrayIndex(collection[0]['tags'], 'product_package:') > -1){
                package = '(' + collection[0]['tags'][arrayIndex(collection[0]['tags'], 'product_package:')].replace('product_package:', '') + ')';
              }
              else{
                package = ' ';
              }
              
               //picking the global title of all the products in the array
              
              var partsToRemove = [];
             
              if(collection[0]){
                if(collection[1]){
                  moreThanOne = 1;
              var title1 = collection[0]['title'].split(' ');
              var title2 = collection[1]['title'].split(' ');
              
              var a, b;
              
              for(a=0;a<title1.length; a++){
                
                for(b=0;b<title1.length; b++){
                  
                  if(title1[a] == title2[b]){
                    console.log(title2[b]);
                   partsToRemove.push(title1[a]);
                  }
                }
              }
              }
                else{
                  partsToRemove.push(collection[0]['title']);
                  console.log('only one type available!!');
                }
              }
              console.log(collection);
              console.log(partsToRemove);
              
              
              //renderer array
              var items = [{
                title: partsToRemove.join(' '),
                img: collection[0]['featured_image'],
                id: collection[0]['id'],
                text: content[collection[0]['type']],
                price: numberToPrice(collection[0]['variants'][0]['price']),
                package: package
              }];
              
              //actual rendering of item holder and item upsell
              
              
             checkCookiesFunction(items);
              //adding options to the select
              
              var a, html = '';
              
              for(a=0;a<collection.length; a++){
                
                var title = collection[a]['title'];
                
                var b;
                
                for(b=0;b<partsToRemove.length;b++){
                  if(moreThanOne == 1){
                  title = title.replace(partsToRemove[b], '');
                  }
                }
                
                html =html + '<option value="'+collection[a]['variants'][0]['id']+'" data-image="'+collection[a]['featured_image']+'">' + title + '</option>'
              }
              
              $('.upsell-id').append(html);
              
              //select change event
              
              $('.upsell-id').change(function(){
                var parent = $(this).parents('.upsell-item');
              var id = $(this).val();
                var position = $(this).find('option:selected').prevAll().length;
                
                //changing price package etc
                
                parent.find('.price').text(numberToPrice(collection[position]['variants'][0]['price']));
                
                parent.find('.upsell-img').attr('src', $(this).find('option:selected').attr('data-image'));
                
                console.log('picked img: ' + $(this).find('option:selected').attr('data-image'))
                
                if(arrayIndex(collection[position]['tags'], 'product_package:') > -1){
                  parent.find('.package').text('(' + collection[position]['tags'][arrayIndex(collection[position]['tags'], 'product_package:')].replace('product_package:','') + ')');
                  
                  }
                else{
                  parent.find('.package').text('');
                }
              })
              
              //add to cart event
              
              $('.upsell_add').click(function(){
              
                
              console.log('now we should add to cart');
                
                var parent = $(this).parents('.upsell-item');
                
                var id = $('.upsell-id').val();
                
                var qty = parent.find('input.qty').val()
                
                if(parent.find('input.qty').val().length > 0 && parent.find('input.qty').val() > 0){
        
        var qty = parent.find('input.qty').val();
      }
                else{
        var qty = 1;
      }
                
                var properties = {};
                
                properties['_upsell item'] = 'true';
                
                
                changePickedVariantTitle($('.upsell-item').attr('data-title'));
                
              push_to_queue(id, qty, properties);
              
                Shopify.moveAlong();
              
              
              })
            }
            
      $(document).ready(function(){
               if($('.breadcrumb__item--current .breadcrumb__text').text() == 'Payment method'){
                console.log('were at payment step');
            
            var likeTpl = $('script[data-template="checkoutfblike"]').text().split(/\$\{(.+?)\}/g);
          
            var items = [{
              script: 'script'
              }];
            
             $('.section--remember-me').append(items.map(function (item) {
                  return likeTpl.map(render(item)).join('');
                }));

              }
        
        if($(window).width() < 768){ 
          $('.main__content').append($('.cta-block'));
        } 

        $(window).resize(function(){
         if($(window).width() < 768){ 
         $('.main__content').append($('.cta-block'));
         }
          else { 
             $('.main__content').append($('.cta-block'));
          }
        })

        changeCheckoutId(checkoutId);
        
         var upsells = '{{ collection }}';
            upsells = upsells.split(',');          
     
      
        
          var i = 0, d = 0, a = 0;
        if(upsells.length > 0){
          for(i = 0; i < upsells.length; i++){
            
              
              $.ajax({
  url: '/products/'+upsells[i]+'.js',
  dataType: 'json',
  success: function(product){
         if(product.available){
          collection[d] = product;
          
          d++;
          }
          a++
        },
  error: function(){
  console.log('error loading');
    
             checkCookiesFunction();
  }
})
              }
        
        }
        if(i == 0){
         a = 'error';
        }
      
    
        var x = setInterval(function(){
          if(a == upsells.length){
            
            clearInterval(x);
            ajaxDone();
          }
        else if(a == 'error'){
          console.log('no products found');
          clearInterval(x);
        }
        }, 250)
        
      })
    </script>
  </body>
</html>
