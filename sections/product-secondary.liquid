{% assign currProduct = product %}
<style>
  #shopify-section-header {
    padding: 0 !important;
  }

  #shopify-section-header .fixed-header.transparent {
    background-color: transparent !important;
    box-shadow: none !important;
  }
  #shopify-section-header .fixed-header.transparent:hover {
    background-color: {{ settings.header_bg }} !important;
  }
</style>
<div class="product-template__wrapper padding-bottom-xlg2" style="background-color: {{ section.settings.background_color }}">
<div class="page-width">

  
  <div id="parentCollection" data-handle="{{ collection.handle }}" class="parent-collection hide">
    {% assign sizes = '' %}
  {% for collProduct in collection.products %}
  <div class="collection-product{% if collProduct.id == product.id %} active{% endif %}" data-id="{{ collProduct.id }}" data-handle="{{ collProduct.handle }}">
    {% capture collProductTitles %}
    {{ collProductTitles }}
    <div class="product-title" style="{% unless collProduct.id == product.id %}display: none;{% endunless %}"  data-id="{{ collProduct.id }}">{{ collProduct.title |remove: collection.title }}</div>
    {% endcapture %}
    {% capture collProductDescriptions %}
    {{ collProductDescriptions }}
    <div class="description" style="{% unless collProduct.id == product.id %}display: none;{% endunless %}" data-id="{{ collProduct.id }}">{{ collProduct.description }}</div>
    {% endcapture %}
    {% assign swatch_color = 'blank' %}
    {% for tag in collProduct.tags %}
      {% if tag contains 'swatch_color_'%}
      {% assign swatch_color = tag |remove: 'swatch_color_' %}
    {% capture swatchColorElements %}
	  {{ swatchColorElements }}
    <div class="swatch-color {% if collProduct.id == product.id %} active{% endif %}" style="background: {{ swatch_color }}" data-id="{{ collProduct.id }}"></div>
	{% endcapture %}
	{% endif %}
    {% endfor %}
    {% if swatch_color == 'blank' %}
    {% unless collProduct.tags contains 'sample' %}
    {% capture swatchColorElements %}
	  {{ swatchColorElements }}
    <option {% if collProduct.id == product.id %} selected{% endif %} value="{{ collProduct.id }}">
      {% assign titleParts = collection.title |replace: '-', ' '| split: ' ' %}
      {% assign prodTitle = collProduct.title | remove: "(Latex-Free)" %}
      {% for part in titleParts %}
      {% assign prodTitle = prodTitle |remove: part  %} 
      {% endfor %}
    {{ prodTitle }}
    </div>
    {% endcapture %}
    {% endunless %}
    {% endif %}
    {% capture productSliders %}
    {{ productSliders }}
    {% assign imagesBreadcrumps = '' %}
    <div class="product-slider-holder" style="{% unless collProduct.id == product.id %}display: none;{% endunless %}"  data-id="{{ collProduct.id }}" data-color="{{ swatch_color }}">
   <div class="grid">
     {% capture SingleSlider %}
     <div class="grid__item four-fifths">
      <div class="productSlider" data-id="{{ collProduct.id }}">
      {% for image in collProduct.images %}
      <div class="image-holder">
        {% if collProduct.id == product.id %}
        <img src="{{ image.src |img_url: '1000x1000' }}"/>
        {% else %}
         <img class="smallImg" src="{{ image.src |img_url: '30x30' }}" data-src="{{ image.src |img_url: '1000x1000' }}"/>
        {% endif %}
      </div>
      
      {% capture imagesBreadcrumps %}
      {{ imagesBreadcrumps }}
      <div class="small--thumbnails">
        <img class="margin-auto" src="{{ image.src |img_url: '60x60' }}"/>
      </div>
      {% endcapture %}
      {% endfor %}
    </div>
     </div>
     {% endcapture %}
     <div class="grid__item one-fifth">
      <div class="thumbnails-slider" data-id="{{ collProduct.id }}">
        {{ imagesBreadcrumps }}
      </div>
     </div>
    {{ SingleSlider }}
     </div>
    </div>
    {%  endcapture %}
    
    {% for variant in collProduct.variants %}
    <div class="product-variant {% if collProduct.variants.size > 1 %}active hide{% endif %}" data-id="{{ variant.id }}" data-size="{{ variant.option1 }}" data-price="{{ variant.price |money }}" data-title="{{collProduct.title }}" 
         {% if variant.compare_at_price and variant.compare_at_price > variant.price %} data-compare-price="{{  variant.compare_at_price |money }}"{% endif %}>
    </div>
    {% assign sizeToCheck = variant.option1 |prepend: '-' |append: '-' %}
    {% unless sizes contains sizeToCheck %}
    {% if sizes == '' %}
    {% assign sizes = variant.option1 |prepend: '-' |append: '-' %}
    {% else %}
    {% capture sizes %}{{ sizes }},-{{ variant.option1 }}-{% endcapture %}
    {% endif %}
    {% endunless %}
    {% endfor %}
    </div>
  {% endfor %}
  </div>

  
  <!-- actual product template beginning -->
  
  <div class="grid">
  <div class="grid__item medium-up--three-fifths">
    <div class="product-sliders-holder medium-up--margin-right-xlg3">
      <div class="product-slider-holder" data-id="{{ product.id }}" data-color="{{ swatch_color }}">
   <div class="grid">
    {% capture singleSlider %}
     <div class="grid__item five-sixths">
      <div class="productSlider" data-id="{{ collProduct.id }}">
{% for image in product.images %}
        <div class="image-holder slickLoading">
        <img src="{{ image |last |split: '#' |first}}" data-id="{{ image |last |split: '#' |last }}" />
          {% capture thumbnails %}
          {{ thumbnails }}
          <div class="image-holder slickLoading">
        <img src="{{ image |last |split: '#' |first}}" data-id="{{ image |last |split: '#' |last }}" />
          </div>
          {% endcapture %}
      </div>
      {% endfor %}
    </div>
     </div>
     {% endcapture %}
     <div class="grid__item one-sixth">
      <div class="thumbnails-slider" data-id="{{ collProduct.id }}">
        {{ thumbnails }}
      </div>
     </div>
     {{ singleSlider }}
     </div>
        <script>
  var sizes = '{{ sizes |join: ','}}';
  console.log(sizes);
  function imageResizer(elem){
  var url = elem.data('src');
    elem.attr('src', url);
  }
  
  function sliderData(type){
    
    if(type == 'singleSlider'){
     return {
  slidesToShow: 1,
  slidesToScroll: 1,
  arrows: false,
  waitForAnimate: false,
       dots: false,
       adaptiveHeight: true,
  responsive: [
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1,
        infinite: true,
        dots: true
      }
    }
  ]
};
    }
    else{
      return {
  slidesToShow: 6,
  slidesToScroll: 6,
  waitForAnimate: false,
  dots: false,
  vertical: true,
  verticalSwiping: true
}
    }
  }
  
  function disableEmptyOptions(){
    
    $('.size-option').each(function(){
      
      if($('#parentCollection .collection-product.active .product-variant[data-size="'+$(this).data('size')+'"]').length == 0){
        console.log('variant doesnt exist:' + $(this).data('size'));
        $(this).addClass('disabled');
        $(this).removeClass('active');
      }
      else{
         $(this).removeClass('disabled');
        console.log('variant exist—Å: ' + $(this).data('size')); 
      }
    })
    
  }
  
  function updatePrice(){
    var price = $('.product-variant.selected').data('price');
          console.log('new price: ' + price);
           $('.priceToChange').text(price);
          
          
          if(checkForAttr($('.product-variant.selected').data('compare-price')) == 1){
             var comparePrice = Number($('.product-variant.selected').data('compare-price'));
          
            $('.comparePrice').text(comparePrice);
            $('.comparePrice').show();
            $('.priceToChange').addClass('discounted');
             }
             else{
             $('.comparePrice').hide();
            $('.priceToChange').removeClass('discounted');
             }
  }
  
  function pickVariant(elem){
    
    $('#parentCollection .collection-product .product-variant').removeClass('selected');
      
    if(elem.length == 1){
      //if option size is changed
      var optionValue = elem.data('size');
      var productId = $('#parentCollection .collection-product.active').data('id');
      elem.siblings().removeClass('active');
      
      if($('#parentCollection .collection-product.active .product-variant[data-size="'+ optionValue +'"]').length == 1){
        $('#parentCollection .collection-product.active .product-variant[data-size="'+ optionValue +'"]').addClass('selected');
    $('#addToCart').removeClass('disabled');
        elem.addClass('active');
        
        updatePrice();
          
      }
      else{
        elem.addClass('disabled');
        $('#addToCart').addClass('disabled');
      }
    }
    else{
      
      //event is product change. checking if variant with the selected option exists
        if($('.size-option.active').length == 1){
          
          var optionValue = $('.size-option.active').data('size');

          if($('#parentCollection .collection-product.active .product-variant[data-size="'+optionValue+'"]').length == 1){
            
            $('#parentCollection .collection-product.active .product-variant[data-size="'+optionValue+'"]').addClass('selected');
            
          updatePrice();
          }
          else{
           $('#addToCart').addClass('disabled'); 
            $('.size-option').removeClass('active');
          }
        }
     
      disableEmptyOptions();
    }
  }
  
  $(document).ready(function(){
    
    var id = '{{ product.id }}';
      pickVariant($('.size-option'));
    
    //images resize on ready
    $('.smallImg').each(function(){
    imageResizer($(this));
    });
    
    //creating the sliders for product page
    $('.product-slider-holder .productSlider').each(function(){
    var id = $(this).data('id');
      
       $(this).slick(sliderData('singleSlider'));
$('.thumbnails-slider[data-id="'+id+'"]').slick(sliderData('thumbnails', id));
    })
    
    //function on color switching
    $('#changeProduct').change(function(){
    var id = $(this).val();
      
      var slickId = $('.productSlider img[data-id="'+id+'"]').parents('.slick-slide').data('slick-index');
      
       $('.productSlider').slick('slickGoTo', slickId);
      
      //changing the selected product in structure tree
      if($('#parentCollection .collection-product[data-id="'+ id +'"] .product-variant').length > 1){
        $('.product-options').removeClass('hide');
      }
      else{
        $('.product-options').addClass('hide');
      }
      
      $('#parentCollection .collection-product').removeClass('active');
      $('#parentCollection .collection-product[data-id="'+ id +'"]').addClass('active');
      
      //changing the selected color
      
      //showing product content by [data-id] unless same product is selected
      
      if($('.product-slider-holder:visible').val() != id){
        
       /*  //showing product slider
      fadeEffects($('.product-slider-holder:visible'), $('.product-slider-holder[data-id="'+id+'"]'));
       
        setTimeout(function(){
        $('.product-slider-holder[data-id="'+id+'"] .productSlider').slick('unslick').slick(sliderData('singleSlider', id));
        $('.product-slider-holder[data-id="'+id+'"] .thumbnails-slider').slick('unslick').slick(sliderData('thumbnails', id));
        }, 301)
        */
        //showing product title
         fadeEffects($('.product-title:visible'), $('.product-title[data-id="'+id+'"]'));
      
        //showing product description
      //fadeEffects($('.product-description .description:visible'), $('.product-description .description[data-id="'+id+'"]'));
      
        //now changing the url
        window.history.pushState("", "", '/collections/' + $('#parentCollection').data('handle')+'/products/'+$('.collection-product[data-id="'+ id +'"]').data('handle'));
      }
      
      pickVariant($('.size-option'));
                  })
    
    $('.size-option').click(function(){
      if(!$(this).hasClass('disabled')){
      pickVariant($(this));
      }
    })
    
    $('#addToCart').click(function(){
      console.log('add to cart clicked');
      if($('#parentCollection .collection-product.active .product-variant.selected').length == 1){
       var variantId =  $('#parentCollection .collection-product.active .product-variant.selected').data('id');
       var variantTitle = $('#parentCollection .collection-product.active .product-variant.selected').data('title');
       
        console.log('variant found: ' + variantId);
        
        if($('.product-swatches .input__number-holder input').val().length > 0 && $('.product-swatches .input__number-holder input').val() > 0){
          var qty = $('.product-swatches .input__number-holder input').val();
        }
        else{
          var qty = 1;
        }
        
    push_to_queue(variantId, qty);
        
        Shopify.moveAlong();
        
        if(Shopify.queue.length == 0){
             $('.addToCartHolder').prepend('<div class="cart-success width-100 margin-vertical-md"><i class="fa fa-check"></i> ' + variantTitle + ' {{ 'products.product.added' | t }}</div>'); 
          $('.addToCartHolder').append('<a href="/checkout" class="btn width-100 margin-top-md border-radius-0 bold uppercase padding-vertical-md"> {{ 'products.product.checkout' | t }} </a>'); 
        }
      }
      else{
       console.log('variant not found'); 
      }
    })
    
    $(document).on('mouseenter','.thumbnails-slider:visible .slick-slide', function (e) {
	var $currTarget = $(e.currentTarget), 
    	index = $currTarget.data('slick-index');
      $('.productSlider:visible').slick('slickGoTo', index);
      $currTarget.siblings().find('img').removeClass('hovered');
    $currTarget.find('img').addClass('hovered');
      console.log('entered slick: ' + index);
});
  
    $(document).on('swipe','.productSlider:visible', function(event, slick, direction){
      var slickId = $('.productSlider:visible .slick-slide.slick-active').attr('data-slick-index');
      console.log('Slick changed; active slick index: ' + slickId);
      $('.thumbnails-slider:visible .slick-slide').find('img').removeClass('hovered');
      $('.thumbnails-slider:visible .slick-slide[data-slick-index="'+ slickId +'"]').find('img').addClass('hovered');
        $('.thumbnails-slider:visible').slick('slickGoTo', slickId);
      
    });
  
  })
  
  
</script>

    </div>
    
    </div>
  </div>
  <div class="grid__item medium-up--two-fifths">
    <div class="product-descriptions margin-bottom-md padding-md">
      <h1 class="product-title-holder lowercase text h2 bold margin-bottom-md small--margin-top-md">
       {{ product.title |replace: '-', ' ' }}
      </h1>
      <div class="product-price-holder margin-bottom-0 small--hide">
        <div class="product__price h5 text bold no-margin">
            <span class="priceToChange real-price{% if current_variant.compare_at_price %} discounted{% endif %}">{{ current_variant.price | money }}</span>
            <span class="comparePrice compare-price">{% if current_variant.compare_at_price %}
              {{ current_variant.compare_at_price | money }}{% endif %}
            </span>
          {% for tag in product.tags %}
          {% if tag contains 'product_package:' %}
          {% if collection.handle == "paste" %} <p class="no-margin">{{ tag |split: ':' |last |split: '/' |first }} cups/unit</p> {% elsif collection.handle == "varnish" %} <p class="no-margin">{{ tag |split: ':' |last |split: '/' |first }} doses/unit</p>{% elsif collection.handle contains "angles" %}<p>100 angles / unit <br/>100% latex-free </p>{% endif %}

          {% if collection.handle == "paste" %} <p class="no-margin">medium grit</p> {% elsif collection.handle == "varnish" %} 0.5ml 5% sodium fluoride varnish{% elsif collection.handle == "wonderful-angles" %}100 angles / unit <br/>100% latex-free {% endif %}
          
          {% endif %}
          {% endfor %}
          
                 
          </div>
      </div>      
      <div class="product-swatches margin-vertical-lg">
        <h6 class="bold uppercase margin-bottom-0">
          <div class="inline-block h6 no-margin vert-top no-overflow">{{ 'products.product.color' |t }}:</div>
          <div class="title-holder hide light text capitalize inline-block vert-top no-overflow">{{ collProductTitles }}</div>
        </h6>
        <div class="grid">
          <div class="grid__item medium-up--one-half small--one-half">
        <div class="changeProductHolder ">
        <select id="changeProduct" class="width-100">
        {{ swatchColorElements }}
        </select>
        </div>
          </div>
          <div class="grid__item medium-up--one-half small--one-half">
                <div class="input__number-holder">
                <div class="qty minus">-</div>
                <input type="number" class="no-spin" name="test" value="1" min="0" >
                <div class="qty plus">+</div>
                </div>
          </div>
        </div>
      </div>
      <div class="product-price-holder margin-bottom-md medium-up--hide">
        <div class="product__price">
            <span class="priceToChange real-price{% if current_variant.compare_at_price %} discounted{% endif %}">{{ current_variant.price | money }}</span>
            <span class="comparePrice compare-price">{% if current_variant.compare_at_price %}
              {{ current_variant.compare_at_price | money }}{% endif %}
            </span>
          {% for tag in product.tags %}
          {% if tag contains 'product_package:' %}
          {% if collection.handle == "paste" %} <p class="no-margin">{{ tag |split: ':' |last |split: '/' |first }} cups/unit</p> {% elsif collection.handle == "varnish" %} <p class="no-margin">{{ tag |split: ':' |last |split: '/' |first }} doses/unit</p>  {% endif %}
          {% endif %}
          {% endfor %}
         {% if collection.handle == "paste" %} <p class="no-margin">medium grit</p> {% elsif collection.handle == "varnish" %} 0.5ml 5% sodium fluoride Varnish {% endif %}
          </div>
      </div>
	  <div class="product-options text-left margin-bottom-md {% if product.variants.size < 2 %}hide{% endif %}">
        <h6 class="bold uppercase margin-bottom-sm2">{{ product.options_with_values[0].name }}</h6>
        {% assign sizes = sizes |remove: '-'|split: ',' %}
        {% for size in sizes %}
        <div class="size-option{% if product.selected_or_first_available_variant.option1 == size %} active{% endif %}" data-size="{{ size }}">
          {{ size }}
        </div>
        {% endfor %}
      </div>
      <div class="addToCartHolder">
        <a href="javascript:void(0);" class="btn width-100 bold text-center no-underline padding-vertical-md" id="addToCart">{{ 'products.product.add_to_cart' | t }}</a>
      </div>
    </div>
    <div class="product-description margin-bottom-md">
        {{ product.description }} {% comment %} instead of {{ collProductDescriptions }} {% endcomment %}
      </div>
      {% if section.blocks.size > 0 and collection.handle == "paste" %}
  <div class="free-snippet padding-vertical-xlg">
    {% include 'free-snippet' %}
  </div>
  {% endif %}
  </div>
  </div>

  </div>
  <div class="product-reviews-holder">
    {% assign filterKey = collection.title | split: '-' | last %}
    {% if filterKey == "Fluoride Varnish" %} {% assign filterKey = "Varnish" %} {% endif %} 
    {% include 'custom-reviews-snippet', filter: filterKey, enable_grid: 'true', grid_size: 'medium-up--one-half', no_scroll: 'true'  %}
  </div>
<div class="page-width">
    <div class="collection-videos medium-up--three-quarters margin-auto text-center">
      {% if section.settings.video_title != blank %}
      <h3 class="color-blue bold bordered-bottom padding-bottom-xlg margin-bottom-xlg2 inline-block relative uppercase border-blue">{{ section.settings.video_title }}</h3>
      {% endif %}
    {% for product in collection.products %}
    {% assign videos = product.metafields.video %}
{% for video in videos %}
      {{ video |last }}
      {% endfor %}
      {% endfor %}
  <script>
    $(document).ready(function(){
      $('.collection-videos iframe').each(function(){
      
      $(this).height($(this).width()*9/16);
      });
      $(window).resize(function(){
      $('.collection-videos iframe').each(function(){
      
      $(this).height($(this).width()*9/16);
      });
      })
    })
  </script>
    </div>

</div>
  
{% unless product == empty %}
  <script type="application/json" id="ProductJson-{{ section.id }}">
    {{ product | json }}
  </script>
{% endunless %}

  
{% schema %}
{
  "name":  "Product pages",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "select",
      "id": "image_size",
      "label":  "Image size",
      "options": [
        {
          "value": "small",
          "label":  "Small"
        },
        {
          "value": "medium",
          "label":  "Medium"
        },
        {
          "value": "large",
          "label":  "Large"
        },
        {
          "value": "full",
          "label":  "Full-width"
        }
      ],
      "default": "medium"
    },
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label":  "Show quantity selector",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_variant_labels",
      "label":  "Show variant labels",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label":  "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "label":  "Enable image zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_size_chart",
      "label":  "Show size chart",
      "default": true
    },
    {
      "type": "page",
      "id": "show_size_chart_page",
      "label": "Size chart content for modal"
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label":  "Show dynamic checkout button",
      "info":  "Lets customers check out directly using a familiar payment method. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label":  "Show social sharing buttons",
      "default": true
    },
    {
      "type": "text",
      "id": "video_title",
      "label":  "Videos section title",
      "default": "Proven & Tested"
    }
  ],
    "blocks": [
      {
        "type": "image-text",
        "name": "Image with text",
        "settings": [
    {
      "type": "text",
      "id": "title",
      "label":  "Title",
      "default": "Gluten free"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label":  "Image"
    }
        ]
      }
    ]
}
{% endschema %}
